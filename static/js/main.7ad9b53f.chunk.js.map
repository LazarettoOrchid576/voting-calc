{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useStateWithLocalStorageBool","localStorageKey","defaultVal","initialStateVal","localStorageValue","localStorage","getItem","React","useState","value","setValue","useEffect","setItem","voteTypes","setVoteTypes","votes","setVotes","guideurl","setGuideURL","seasonNumber","setSeasonNumber","voteTotals","setVoteTotals","votesToCast","setVotesToCast","reverse","setReverse","guideowner","setGuideOwner","idols","setIdols","Math","floor","random","idolRandom","siesta","setSiesta","rawWimdys","setRawWimdys","wimdys","setWimdys","showOptions","setShowOptions","includeWills","setIncludeWills","orderWimdys","setOrderWimdys","showWimdyPct","setShowWimdyPct","loadData","a","fetch","process","config","json","configJson","votetypes","season","length","sort","votesleft","totalPct","map","type","parseFloat","reduce","b","pctleft","castVotes","totals","filter","votetype","forEach","idx","label","includeInTotal","adjValue","votesToAdd","round","min","chosenIdol","idol","x","getIdolizedPlayer","renderVote","val","debugText","toFixed","wimdyVoteSplit","slider","style","max","step","onChange","e","newvalue","newVoteTypes","newVoteType","voteTypeCopy","push","changeValue","target","key","className","id","inputMode","pattern","onClick","defaultChecked","slice","order","rel","href","name","wimdy","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7ad9b53f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './App.css';\n\nconst App = () => {\n\n  const useStateWithLocalStorageBool = (localStorageKey, defaultVal) => {\n    const localStorageValue = localStorage.getItem(localStorageKey);\n    let initialStateVal;\n    if (localStorageValue === \"true\") {\n      initialStateVal = true;\n    } else if (localStorageValue === \"false\") {\n      initialStateVal = false;\n    } else {\n      initialStateVal = defaultVal;\n    }\n    const [value, setValue] = React.useState(initialStateVal);\n   \n    React.useEffect(() => {\n      localStorage.setItem(localStorageKey, value);\n    }, [localStorageKey, value]);\n   \n    return [value, setValue];\n  };\n\n  const [voteTypes, setVoteTypes] = useState([[\"Loading...\", 1.0]]);\n  const [votes, setVotes] = useState(0);\n  const [guideurl, setGuideURL] = useState(\"http://nymillennials.rocks\");\n  const [seasonNumber, setSeasonNumber] = useState(\"?\");\n  const [voteTotals, setVoteTotals] = useState({});\n  const [votesToCast, setVotesToCast] = useState(0);\n  const [reverse, setReverse] = useState(false);\n  const [guideowner, setGuideOwner] = useState(\"our team\");\n  const [idols, setIdols] = useState([]);\n  const [idolRandom, setIdolRandom] = useState(Math.floor(Math.random() * 100) + 1);\n  const [siesta, setSiesta] = useState(false);\n  const [rawWimdys, setRawWimdys] = useState([]);\n  const [wimdys, setWimdys] = useState([]);\n  const colorH = 115;\n  const colorS = 100;\n  const maxL = 45;\n  const minL = 15;\n  const debug = true;\n  const [showOptions, setShowOptions] = useState(false);\n  const [includeWills, setIncludeWills] = useStateWithLocalStorageBool(\"includeWills\", true);\n  const [orderWimdys, setOrderWimdys] = useStateWithLocalStorageBool(\"orderWimdys\", false);\n  const [showWimdyPct, setShowWimdyPct] = useStateWithLocalStorageBool(\"showWimdyPct\", false);\n\n  const loadData = async () => {\n    const config = await fetch(`${process.env.PUBLIC_URL}/config.json`);\n    const configJson = await config.json();\n    setVoteTypes(configJson.votetypes);\n    setGuideURL(configJson.guideurl ?? \"http://nymillennials.rocks\");\n    setSeasonNumber(configJson.season ?? \"?\");\n    setReverse(configJson.reverse ?? false);\n    setGuideOwner(configJson.guideowner ?? \"our team\");\n    setIdols(configJson.idols ?? []);\n    setSiesta(configJson.siesta ?? false);\n    setRawWimdys(configJson.wimdys ?? []);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [])\n\n  useEffect(() => {\n    if (rawWimdys.length) {\n      setWimdys(orderWimdys ? rawWimdys : [...rawWimdys].sort(() => Math.random() - 0.5));\n    }\n  }, [orderWimdys, rawWimdys])\n\n  useEffect(() => {\n    let votesleft = votes;\n    const totalPct = voteTypes.map(({type, value}) => (includeWills || type !== \"will\") ? parseFloat(value) : 0).reduce((a, b) => a + b, 0);\n    let pctleft = 1.0;\n    let castVotes = 0;\n    const totals = {};\n    voteTypes.filter(votetype => includeWills || votetype.type !== \"will\").forEach(({label, value, includeInTotal, type}, idx) => {\n      if (idx === voteTypes.length - 1) {\n        totals[label] = votesleft;\n        if (includeInTotal) {\n          castVotes += votesleft;\n        }\n      } else {\n        const adjValue = (parseFloat(value) * (1 / totalPct));\n        const calculatedVotes = Math.round((adjValue / pctleft) * votesleft);\n        const votesToAdd = calculatedVotes || Math.min(votesleft, 1);\n        totals[label] = votesToAdd;\n        if (includeInTotal) {\n          castVotes += votesToAdd;\n        }\n        pctleft -= adjValue;\n        votesleft -= totals[label]\n      }\n    });\n    setVoteTotals(totals);\n    setVotesToCast(castVotes);\n  }, [votes, voteTypes, includeWills]);\n\n  const getLValue = (val) => {\n    return maxL - ((maxL - minL) * val);\n  };\n\n  const getIdolizedPlayer = () => {\n    let idol = idols[0];\n    for (let x=1; x<idols.length; x++) {\n      if (idols[x].value >= idolRandom) {\n        return idol;\n      }\n      idol = idols[x];\n    }\n    return idol;\n  };\n\n  const chosenIdol = getIdolizedPlayer();\n\n  const changeValue = (votetype, newvalue) => {\n    const newVoteTypes = [];\n    voteTypes.forEach(newVoteType => {\n      if (newVoteType.label === votetype.label) {\n        const voteTypeCopy = {...newVoteType};\n        voteTypeCopy.value = newvalue;\n        newVoteTypes.push(voteTypeCopy)\n      } else {\n        newVoteTypes.push(newVoteType);\n      }\n    });\n    setVoteTypes(newVoteTypes);\n  }\n\n  const renderVote = votetype => {\n    const debugText = debug ? ` - ${votes <= 0 ? (0).toFixed(2) : (((voteTotals[votetype.label] ?? 0) / votes) * 100.0).toFixed(2)}%` : \"\";\n    const wimdyVoteSplit = (showWimdyPct && rawWimdys.length) ? ` (~${(voteTotals[\"WIMDY!\"] / rawWimdys.length).toFixed(2)} votes each)` : \"\";\n    const slider = (votetype.min ? <input type=\"range\" style={{\"marginLeft\": \"10px\"}} min={votetype.min} max={votetype.max} value={votetype.value} step=\"0.01\" onChange={e => changeValue(votetype, e.target.value)} /> : null);\n    return (\n      <div key={`${votetype.label}`} className=\"voteType\" style={{ \"color\": votetype.value > .8 ? \"white\": \"black\", \"backgroundColor\": `hsl(${colorH}, ${colorS}%, ${getLValue(votetype.value)}%)` }}>\n        {`${votetype.label + (votetype.type === \"wimdy\" ? \" *\" : \"\")}: ${voteTotals[votetype.label] ?? 0} vote${voteTotals[votetype.label] === 1 ? \"\" : \"s\"}${debugText}${votetype.type === \"wimdy\" ? wimdyVoteSplit : \"\"}`}\n        {slider}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <label>How many votes do you have?</label>\n      <input id=\"votes\" type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\" min=\"0\" step=\"1\" value={votes} onChange={e => setVotes(e.target.value)} />\n      <button className=\"showOptions\" onClick={() => setShowOptions(!showOptions)}>{showOptions ? \"Hide\" : \"Show\"} Options</button>\n      <br />\n      {showOptions && (\n        <div>\n          <br />\n          <label className=\"option\"><input type=\"checkbox\" defaultChecked={includeWills} onClick={() => setIncludeWills(!includeWills)}/> Include Wills</label>\n          <label className=\"option\"><input type=\"checkbox\" defaultChecked={orderWimdys} onClick={() => setOrderWimdys(!orderWimdys)}/> Keep Wimdys In Order</label>\n          <label className=\"option\"><input type=\"checkbox\" defaultChecked={showWimdyPct} onClick={() => setShowWimdyPct(!showWimdyPct)}/> Show Wimdy Percentage Split</label>\n          <br />\n        </div>\n      )}\n      <br />\n      {(reverse ? voteTypes.slice(0).reverse() : voteTypes).sort((a, b) => a.order - b.order).filter(votetype => includeWills || votetype.type !== \"will\").map((votetype) => renderVote(votetype))}\n      <br />\n      <div>Total Votes to Cast: {votesToCast}</div>\n      {(!!idols.length && <h2>\n        Idolize: <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.blaseball.com/player/${chosenIdol.id}`}>{chosenIdol.name}</a> (rolled {idolRandom})\n        </h2>)}\n    <br />\n    { \n      wimdys.length ? (\n      <>\n        <div>* Vote with your heart on any of the following: <br />\n        <ul>\n          {wimdys.map(wimdy => <li key={wimdy}>{wimdy}</li>)}\n        </ul>\n        </div>\n      </>\n      ) : \"\"\n    }\n    {\n      siesta ? (\n        <div><span style={{\"color\": \"red\"}}>&lt;3</span>, The New York Millennials Voting Guide Team</div>\n      ) : (\n        <div>Why these picks? <a target=\"_blank\" rel=\"noopener noreferrer\" href={guideurl}>{`Read ${guideowner}'s awesome voting guide for Season ${seasonNumber}!`}</a></div>\n      )\n    }\n    </div>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}